<div class="wall-container">
	<div class="game-container" style="@gameContainerCss" @onclick="HandleClick" tabindex="0" @onkeydown="HandleKeyPress">
		@if (gameContainer == null) {
			<h1>Loading...</h1>
		}
		else {
			<div class="rect border"></div>	
				<div class="middle border">
					<div class="square">
					</div>
					<div class="square2">
					</div>
				</div>
				<div class="line"></div>	
				<div class="rect border"></div>

				<Ball Model="gameContainer.Ball" IsRunning="gameContainer.IsRunning" />
				<Paddle Model="gameContainer.UserPaddle" />
				<Paddle Model="gameContainer.ComputerPaddle" />

				<Score Model="gameContainer.UserScore" side="right" />
				<Score Model="gameContainer.ComputerScore" side="left" />
		}
	</div>
</div>

@code {
	GameManager? gameContainer { get; set; }

	string gameContainerCss => $"width: {gameContainer?.containerDimensions.x/15}rem; height: {gameContainer?.containerDimensions.y/15}rem";

	protected override void OnInitialized()
	{
		gameContainer = new GameManager();
		
		gameContainer.MainLoopCompleted += (o,e) => StateHasChanged();
	}

	void HandleClick() {
		if (gameContainer?.IsRunning == false)
			gameContainer.StartGame();
		else
			gameContainer?.StopGame();
	}

	void HandleKeyPress(KeyboardEventArgs e)
	{
		if (e.Key == "ArrowUp")
			gameContainer?.MoveUserPaddleUp();
		if (e.Key == "ArrowDown")
			gameContainer?.MoveUserPaddleDown();
	}
}